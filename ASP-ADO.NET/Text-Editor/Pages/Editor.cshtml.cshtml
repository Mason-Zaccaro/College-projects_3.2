@page "/editor"
@model TextEditor.Pages.EditorModel
@{
    ViewData["Title"] = "Текстовый редактор";
}

<div class="container-fluid mt-3">
    <div class="row">
        <!-- Левая панель с редактором -->
        <div class="col-lg-8">
            <div class="card shadow">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                    <h4 class="mb-0">
                        <i class="fas fa-edit"></i> Текстовый редактор
                    </h4>
                    <div class="btn-group">
                        <button type="button" class="btn btn-light btn-sm" onclick="insertText('**жирный**')">
                            <i class="fas fa-bold"></i>
                        </button>
                        <button type="button" class="btn btn-light btn-sm" onclick="insertText('*курсив*')">
                            <i class="fas fa-italic"></i>
                        </button>
                        <button type="button" class="btn btn-light btn-sm" onclick="insertText('~~зачеркнутый~~')">
                            <i class="fas fa-strikethrough"></i>
                        </button>
                    </div>
                </div>

                <div class="card-body p-0">
                    <form method="post">
                        <textarea asp-for="TextContent"
                                  class="form-control border-0"
                                  id="textEditor"
                                  rows="20"
                                  placeholder="Начните печатать здесь..."
                                  style="resize: vertical; font-family: 'Courier New', monospace; font-size: 14px;"
                                  oninput="updateStats()"></textarea>

                        <div class="card-footer bg-light d-flex justify-content-between align-items-center">
                            <div class="btn-group">
                                <button type="submit" asp-page-handler="Save" class="btn btn-success">
                                    <i class="fas fa-save"></i> Сохранить
                                </button>
                                <button type="submit" asp-page-handler="Clear" class="btn btn-outline-danger"
                                        onclick="return confirm('Вы уверены, что хотите очистить весь текст?')">
                                    <i class="fas fa-trash"></i> Очистить
                                </button>
                                <button type="button" class="btn btn-outline-info" onclick="downloadText()">
                                    <i class="fas fa-download"></i> Скачать
                                </button>
                            </div>

                            <div class="text-muted small">
                                <span id="charCount">@Model.EditorData.CharacterCount</span> символов,
                                <span id="wordCount">@Model.EditorData.WordCount</span> слов
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Правая панель с информацией -->
        <div class="col-lg-4">
            <!-- Статус сохранения -->
            @if (!string.IsNullOrEmpty(Model.SaveMessage))
            {
                <div class="alert @(Model.SaveSuccess ? "alert-success" : "alert-danger") alert-dismissible fade show">
                    <i class="fas @(Model.SaveSuccess ? "fa-check-circle" : "fa-exclamation-triangle")"></i>
                    @Model.SaveMessage
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <!-- Информация о документе -->
            <div class="card shadow mb-3">
                <div class="card-header bg-info text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-info-circle"></i> Информация о документе
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row text-center">
                        <div class="col-6">
                            <div class="border-end">
                                <h3 class="text-primary mb-0" id="liveCharCount">@Model.EditorData.CharacterCount</h3>
                                <small class="text-muted">Символов</small>
                            </div>
                        </div>
                        <div class="col-6">
                            <h3 class="text-success mb-0" id="liveWordCount">@Model.EditorData.WordCount</h3>
                            <small class="text-muted">Слов</small>
                        </div>
                    </div>
                    <hr>
                    <p class="mb-1">
                        <i class="fas fa-clock text-warning"></i>
                        <strong>Последнее изменение:</strong>
                    </p>
                    <p class="text-muted small">@Model.EditorData.LastModified.ToString("dd.MM.yyyy HH:mm:ss")</p>
                </div>
            </div>

            <!-- Быстрые действия -->
            <div class="card shadow mb-3">
                <div class="card-header bg-secondary text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-tools"></i> Быстрые действия
                    </h5>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        <button type="button" class="btn btn-outline-primary btn-sm" onclick="makeUpperCase()">
                            <i class="fas fa-font"></i> ЗАГЛАВНЫЕ БУКВЫ
                        </button>
                        <button type="button" class="btn btn-outline-primary btn-sm" onclick="makeLowerCase()">
                            <i class="fas fa-font"></i> строчные буквы
                        </button>
                        <button type="button" class="btn btn-outline-primary btn-sm" onclick="addTimestamp()">
                            <i class="fas fa-clock"></i> Добавить время
                        </button>
                    </div>
                </div>
            </div>

            <!-- Горячие клавиши -->
            <div class="card shadow">
                <div class="card-header bg-dark text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-keyboard"></i> Горячие клавиши
                    </h5>
                </div>
                <div class="card-body">
                    <small class="text-muted">
                        <strong>Ctrl+S</strong> - Сохранить<br>
                        <strong>Ctrl+A</strong> - Выделить все<br>
                        <strong>Ctrl+Z</strong> - Отменить<br>
                        <strong>Ctrl+Y</strong> - Повторить
                    </small>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    body {
        background-color: #f8f9fa;
    }

    .card {
        border: none;
        border-radius: 10px;
    }

    .card-header {
        border-radius: 10px 10px 0 0 !important;
    }

    #textEditor:focus {
        box-shadow: none;
        outline: none;
    }

    .btn-group .btn {
        border-radius: 0;
    }

        .btn-group .btn:first-child {
            border-radius: 5px 0 0 5px;
        }

        .btn-group .btn:last-child {
            border-radius: 0 5px 5px 0;
        }
</style>

<script>
    // Обновление статистики в реальном времени
    function updateStats() {
        const text = document.getElementById('textEditor').value;
        const charCount = text.length;
        const wordCount = text.trim() === '' ? 0 : text.trim().split(/\s+/).length;

        document.getElementById('charCount').textContent = charCount;
        document.getElementById('wordCount').textContent = wordCount;
        document.getElementById('liveCharCount').textContent = charCount;
        document.getElementById('liveWordCount').textContent = wordCount;
    }

    // Вставка текста в позицию курсора
    function insertText(text) {
        const textarea = document.getElementById('textEditor');
        const start = textarea.selectionStart;
        const end = textarea.selectionEnd;
        const value = textarea.value;

        textarea.value = value.substring(0, start) + text + value.substring(end);
        textarea.focus();
        textarea.setSelectionRange(start + text.length, start + text.length);
        updateStats();
    }

    // Преобразование в заглавные буквы
    function makeUpperCase() {
        const textarea = document.getElementById('textEditor');
        const start = textarea.selectionStart;
        const end = textarea.selectionEnd;

        if (start !== end) {
            const selectedText = textarea.value.substring(start, end);
            const newText = textarea.value.substring(0, start) +
                           selectedText.toUpperCase() +
                           textarea.value.substring(end);
            textarea.value = newText;
            textarea.setSelectionRange(start, end);
        }
        updateStats();
    }

    // Преобразование в строчные буквы
    function makeLowerCase() {
        const textarea = document.getElementById('textEditor');
        const start = textarea.selectionStart;
        const end = textarea.selectionEnd;

        if (start !== end) {
            const selectedText = textarea.value.substring(start, end);
            const newText = textarea.value.substring(0, start) +
                           selectedText.toLowerCase() +
                           textarea.value.substring(end);
            textarea.value = newText;
            textarea.setSelectionRange(start, end);
        }
        updateStats();
    }

    // Добавление временной метки
    function addTimestamp() {
        const now = new Date();
        const timestamp = `\n--- ${now.toLocaleString()} ---\n`;
        insertText(timestamp);
    }

    // Скачивание текста как файла
    function downloadText() {
        const text = document.getElementById('textEditor').value;
        const blob = new Blob([text], { type: 'text/plain' });
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = 'document.txt';
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        window.URL.revokeObjectURL(url);
    }

    // Горячие клавиши
    document.addEventListener('keydown', function(e) {
        if (e.ctrlKey && e.key === 's') {
            e.preventDefault();
            document.querySelector('button[asp-page-handler="Save"]').click();
        }
    });

    // Обновляем статистику при загрузке страницы
    document.addEventListener('DOMContentLoaded', function() {
        updateStats();
    });
</script>

<!-- Font Awesome -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">